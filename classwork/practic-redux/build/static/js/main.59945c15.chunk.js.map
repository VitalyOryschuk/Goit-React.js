{"version":3,"sources":["redux/budgetApp/budgetAppTypes.js","components/shared/Form.js","components/shared/Label.js","components/shared/Input.js","components/shared/Button.js","components/BudgetForm.js","redux/budgetApp/budgetActions.js","components/ExpenseForm.js","components/ExpensesTable.js","redux/budgetApp/budgetAppSelectors.js","components/Value.js","components/Values.js","components/App.js","redux/budgetApp/budgetAppReducers.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["SET_BUDGET","StyledForm","styled","form","Form","onSubmit","children","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","type","value","onChange","name","StyledButton","button","Button","onClick","BudgetForm","state","budget","handleChange","e","setState","target","handleSubmit","preventDefault","onSave","Number","this","Component","connect","dispatch","types","payload","ExpenseForm","amount","id","shortid","generate","data","expense","budgetActions","Table","table","store","expenses","budgetApp","onRemove","map","key","getExpenses","getBudget","getTotalExpenses","reduce","total","getBalance","Container","div","isPositive","p","Amount","Value","section","budgetAppSelectors","balance","length","combineReducers","action","filter","el","rootReducer","budgetAppReducer","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59945c15.chunk.js","sourcesContent":["export const SET_BUDGET = \"budgetApp/SET_BUDGET\";\r\nexport const ADD_EXPENSE = \"budgetApp/ADD_EXPENSE\";\r\nexport const REMOVE_EXPENSE = \"budgetApp/REMOVE_EXPENSE\";\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px;\r\n  width: 100%;\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nconst Form = ({ onSubmit = () => null, children }) => (\r\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\r\n);\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledLabel = styled.label`\r\n  display: inline-block;\r\n  font-size: 20px;\r\n  color: #171718;\r\n  cursor: pointer;\r\n  ${props => props.customStyles}\r\n`;\r\n\r\nconst Label = ({ children, customStyles }) => (\r\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\r\n);\r\n\r\nexport default Label;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledInput = styled.input`\r\n  color: #171718;\r\n  font: inherit;\r\n  font-size: 1.2rem;\r\n  padding: 16px;\r\n  border-radius: 4px;\r\n  border: 1px solid #bdbdbd;\r\n  width: 100%;\r\n  outline: 0;\r\n\r\n  &:focus {\r\n    border: 1px solid #2b32b2;\r\n  }\r\n`;\r\n\r\nconst Input = ({\r\n  type = \" text\",\r\n  value = \"\",\r\n  onChange = () => null,\r\n  name = \"\"\r\n}) => <StyledInput type={type} value={value} onChange={onChange} name={name} />;\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledButton = styled.button`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  border: 0;\r\n  outline: 0;\r\n  padding: 8px 24px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\r\n  font: inherit;\r\n  text-transform: uppercase;\r\n  user-select: none;\r\n\r\n  transition: background-color 200ms ease-in-out;\r\n\r\n  &:hover {\r\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n\r\nconst Button = ({ type = \"button\", label = \"\", onClick = () => null }) => (\r\n  <StyledButton type={type} onClick={onClick}>\r\n    {label}\r\n  </StyledButton>\r\n);\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as budgetActions from \"../redux/budgetApp/budgetActions\";\r\nimport Form from \"./shared/Form\";\r\nimport Label from \"./shared/Label\";\r\nimport Input from \"./shared/Input\";\r\nimport Button from \"./shared/Button\";\r\n\r\nconst labelStyles = `\r\n  margin-bottom: 16px;  \r\n`;\r\n\r\nclass BudgetForm extends Component {\r\n  state = {\r\n    budget: 0\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      budget: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSave(Number(this.state.budget));\r\n    this.setState({ budget: 0 });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label customStyles={labelStyles}>\r\n          Enter your total budget\r\n          <Input\r\n            type=\"number\"\r\n            value={this.state.budget}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n\r\n        <Button label=\"Save\" type=\"submit\" />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSave: budget => dispatch(budgetActions.setBudgetAction(budget))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(BudgetForm);\r\n","import * as types from \"./budgetAppTypes\";\r\n\r\nexport const setBudgetAction = value => ({\r\n  type: types.SET_BUDGET,\r\n  payload: {\r\n    budget: value\r\n  }\r\n});\r\n\r\nexport const addExpenseAction = data => ({\r\n  type: types.ADD_EXPENSE,\r\n  payload: {\r\n    expense: data\r\n  }\r\n});\r\n\r\nexport const removeExpenseAction = value => ({\r\n  type: types.REMOVE_EXPENSE,\r\n  payload: {\r\n    id: value\r\n  }\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as budgetActions from \"../redux/budgetApp/budgetActions\";\r\nimport shortid from \"shortid\";\r\nimport Form from \"./shared/Form\";\r\nimport Label from \"./shared/Label\";\r\nimport Input from \"./shared/Input\";\r\nimport Button from \"./shared/Button\";\r\n\r\nconst labelStyles = `\r\n  margin-bottom: 16px;  \r\n`;\r\n\r\nclass ExpenseForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    amount: 0\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSave({\r\n      id: shortid.generate(),\r\n      name: this.state.name,\r\n      amount: Number(this.state.amount)\r\n    });\r\n    this.setState({ name: \"\", amount: 0 });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label customStyles={labelStyles}>\r\n          Enter expense name\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n        <Label customStyles={labelStyles}>\r\n          Enter expense amount\r\n          <Input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            value={this.state.amount}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n\r\n        <Button label=\"Add\" type=\"submit\" />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSave: data => dispatch(budgetActions.addExpenseAction(data))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ExpenseForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as budgetActions from \"../redux/budgetApp/budgetActions\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./shared/Button\";\r\n\r\nconst Table = styled.table`\r\n  border-collapse: collapse;\r\n  text-align: center;\r\n  width: 100%;\r\n  tr {\r\n    border-bottom: 1px solid #212121;\r\n  }\r\n  td,\r\n  th {\r\n    padding-top: 8px;\r\n    padding-bottom: 8px;\r\n  }\r\n`;\r\n\r\nconst ExpensesTable = ({ expenses, onRemove }) => (\r\n  <Table>\r\n    <thead>\r\n      <tr>\r\n        <th>Expense name</th>\r\n        <th>Expense amount</th>\r\n        <th />\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {expenses.map(({ id, name, amount }) => (\r\n        <tr key={id}>\r\n          <td>{name}</td>\r\n          <td>{amount}</td>\r\n          <td>\r\n            <Button label=\"Delete\" onClick={() => onRemove(id)} />\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </Table>\r\n);\r\n\r\nconst mapStateToProps = store => ({\r\n  expenses: store.budgetApp.expenses\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onRemove: id => dispatch(budgetActions.removeExpenseAction(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesTable);\r\n","export const getExpenses = store => store.budgetApp.expenses;\r\n\r\nexport const getBudget = store => store.budgetApp.budget;\r\n\r\nexport const getTotalExpenses = store =>\r\n  store.budgetApp.expenses.reduce(\r\n    (total, expense) => total + expense.amount,\r\n    0\r\n  );\r\n\r\nexport const getBalance = store => {\r\n  const budget = getBudget(store);\r\n  const expenses = getTotalExpenses(store);\r\n  return budget - expenses;\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  padding: 8px 24px;\r\n  color: ${props => (props.isPositive ? \"#388E3C\" : \"#D32F2F\")};\r\n  user-select: none;\r\n`;\r\n\r\nconst Label = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 8px;\r\n  text-transform: uppercase;\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Amount = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-size: 48px;\r\n`;\r\n\r\nconst Value = ({ label, value, isPositive }) => (\r\n  <Container isPositive={isPositive}>\r\n    <Label>{label}</Label>\r\n    <Amount>{value}&nbsp;&#x24;</Amount>\r\n  </Container>\r\n);\r\n\r\nexport default Value;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport * as budgetAppSelectors from \"../redux/budgetApp/budgetAppSelectors\";\r\nimport Value from \"./Value\";\r\n\r\nconst Container = styled.section`\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\n// const calculateBalance = (budget, expenses) => budget - expenses;\r\n\r\n// const calculateTotalExpenses = expenses => {\r\n//   return expenses.reduce((total, expense) => total + expense.amount, 0);\r\n// };\r\n\r\nconst Values = ({ budget, expenses, balance }) => {\r\n  return (\r\n    <Container>\r\n      <Value label=\"Budget\" value={budget} isPositive />\r\n      <Value label=\"Expenses\" value={expenses} />\r\n      <Value label=\"Balance\" value={balance} isPositive={balance >= 0} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = store => ({\r\n  budget: budgetAppSelectors.getBudget(store),\r\n  expenses: budgetAppSelectors.getTotalExpenses(store),\r\n  balance: budgetAppSelectors.getBalance(store)\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Values);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport BudgetForm from \"./BudgetForm\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport ExpensesTable from \"./ExpensesTable\";\r\nimport Values from \"./Values\";\r\nimport * as budgetAppSelectors from \"../redux/budgetApp/budgetAppSelectors\";\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 340px 1fr;\r\n  align-items: flex-start;\r\n  grid-gap: 24px;\r\n  max-width: 960px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst App = ({ expenses }) => {\r\n  return (\r\n    <Container>\r\n      <BudgetForm />\r\n      <Values />\r\n      <ExpenseForm />\r\n      {expenses.length > 0 && <ExpensesTable />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = store => ({\r\n  expenses: budgetAppSelectors.getExpenses(store)\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport * as types from \"./budgetAppTypes\";\r\n\r\nconst budgetReducer = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case types.SET_BUDGET:\r\n      return action.payload.budget;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst expensesReducer = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD_EXPENSE:\r\n      return [payload.expense, ...state];\r\n\r\n    case types.REMOVE_EXPENSE:\r\n      return state.filter(el => el.id !== payload.id);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  budget: budgetReducer,\r\n  expenses: expensesReducer\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport budgetAppReducer from \"./budgetApp/budgetAppReducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  budgetApp: budgetAppReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}